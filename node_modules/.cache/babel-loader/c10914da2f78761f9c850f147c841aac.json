{"ast":null,"code":"var _jsxFileName = \"/home/jonathanh8686/Desktop/Programming/Javascript/React/clash-analyzer/src/components/RoleStackedBar.jsx\";\nimport React from 'react';\nimport CanvasJSReact from \"../canvasjs.react\";\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nconst RoleStackedBar = props => {\n  function toggleDataSeries(e) {\n    console.log(e);\n\n    if (typeof e.dataSeries.visible === \"undefined\" || e.dataSeries.visible) {\n      e.dataSeries.visible = false;\n    } else {\n      e.dataSeries.visible = true;\n    }\n\n    e.chart.render();\n  }\n\n  const options = {\n    animationEnabled: true,\n    legend: {\n      verticalAlign: \"center\",\n      horizontalAlign: \"right\",\n      reversed: true,\n      cursor: \"pointer\",\n      fontSize: 16,\n      itemclick: toggleDataSeries\n    },\n    toolTip: {\n      shared: true\n    },\n    data: [{\n      type: \"stackedColumn100\",\n      name: \"Top\",\n      showInLegend: true,\n      color: \"#eb2a2a\",\n      dataPoints: [//{ label: \"United States\", y: 238 },\n      ]\n    }, {\n      type: \"stackedColumn100\",\n      name: \"Jungle\",\n      showInLegend: true,\n      color: \"#40f022\",\n      dataPoints: []\n    }, {\n      type: \"stackedColumn100\",\n      name: \"Mid\",\n      showInLegend: true,\n      color: \"#00b7ff\",\n      dataPoints: []\n    }]\n  };\n\n  for (var i = 0; i < props.gamedata[\"roles\"].length; i++) {\n    options[\"data\"][i][\"dataPoints\"].push({\n      label: props.gamedata[\"roles\"][i][0],\n      y: props.gamedata[\"roles\"][i][1]\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CanvasJSChart, {\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default RoleStackedBar;","map":{"version":3,"sources":["/home/jonathanh8686/Desktop/Programming/Javascript/React/clash-analyzer/src/components/RoleStackedBar.jsx"],"names":["React","CanvasJSReact","CanvasJS","CanvasJSChart","RoleStackedBar","props","toggleDataSeries","e","console","log","dataSeries","visible","chart","render","options","animationEnabled","legend","verticalAlign","horizontalAlign","reversed","cursor","fontSize","itemclick","toolTip","shared","data","type","name","showInLegend","color","dataPoints","i","gamedata","length","push","label","y"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,IAAIC,QAAQ,GAAGD,aAAa,CAACC,QAA7B;AACA,IAAIC,aAAa,GAAGF,aAAa,CAACE,aAAlC;;AAGA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAE9B,WAASC,gBAAT,CAA0BC,CAA1B,EAA6B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;;AACA,QAAI,OAAQA,CAAC,CAACG,UAAF,CAAaC,OAArB,KAAkC,WAAlC,IAAiDJ,CAAC,CAACG,UAAF,CAAaC,OAAlE,EAA2E;AACvEJ,MAAAA,CAAC,CAACG,UAAF,CAAaC,OAAb,GAAuB,KAAvB;AACH,KAFD,MAGK;AACDJ,MAAAA,CAAC,CAACG,UAAF,CAAaC,OAAb,GAAuB,IAAvB;AACH;;AACDJ,IAAAA,CAAC,CAACK,KAAF,CAAQC,MAAR;AACH;;AAED,QAAMC,OAAO,GAAG;AACZC,IAAAA,gBAAgB,EAAE,IADN;AAEZC,IAAAA,MAAM,EAAE;AACJC,MAAAA,aAAa,EAAE,QADX;AAEJC,MAAAA,eAAe,EAAE,OAFb;AAGJC,MAAAA,QAAQ,EAAE,IAHN;AAIJC,MAAAA,MAAM,EAAE,SAJJ;AAKJC,MAAAA,QAAQ,EAAE,EALN;AAMJC,MAAAA,SAAS,EAAEhB;AANP,KAFI;AAWZiB,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE;AADH,KAXG;AAcZC,IAAAA,IAAI,EAAE,CACF;AACIC,MAAAA,IAAI,EAAE,kBADV;AAEIC,MAAAA,IAAI,EAAE,KAFV;AAGIC,MAAAA,YAAY,EAAE,IAHlB;AAIIC,MAAAA,KAAK,EAAE,SAJX;AAKIC,MAAAA,UAAU,EAAE,CACR;AADQ;AALhB,KADE,EAUF;AACIJ,MAAAA,IAAI,EAAE,kBADV;AAEIC,MAAAA,IAAI,EAAE,QAFV;AAGIC,MAAAA,YAAY,EAAE,IAHlB;AAIIC,MAAAA,KAAK,EAAE,SAJX;AAKIC,MAAAA,UAAU,EAAE;AALhB,KAVE,EAkBF;AACIJ,MAAAA,IAAI,EAAE,kBADV;AAEIC,MAAAA,IAAI,EAAE,KAFV;AAGIC,MAAAA,YAAY,EAAE,IAHlB;AAIIC,MAAAA,KAAK,EAAE,SAJX;AAKIC,MAAAA,UAAU,EAAE;AALhB,KAlBE;AAdM,GAAhB;;AA2CA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG1B,KAAK,CAAC2B,QAAN,CAAe,OAAf,EAAwBC,MAA5C,EAAoDF,CAAC,EAArD,EAAyD;AACrDjB,IAAAA,OAAO,CAAC,MAAD,CAAP,CAAgBiB,CAAhB,EAAmB,YAAnB,EAAiCG,IAAjC,CAAsC;AAACC,MAAAA,KAAK,EAAE9B,KAAK,CAAC2B,QAAN,CAAe,OAAf,EAAwBD,CAAxB,EAA2B,CAA3B,CAAR;AAAuCK,MAAAA,CAAC,EAAC/B,KAAK,CAAC2B,QAAN,CAAe,OAAf,EAAwBD,CAAxB,EAA2B,CAA3B;AAAzC,KAAtC;AACH;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEjB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAOH,CAnED;;AAqEA,eAAeV,cAAf","sourcesContent":["import React from 'react';\n\nimport CanvasJSReact from \"../canvasjs.react\"\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\n\nconst RoleStackedBar = (props) => {\n\n    function toggleDataSeries(e) {\n        console.log(e);\n        if (typeof (e.dataSeries.visible) === \"undefined\" || e.dataSeries.visible) {\n            e.dataSeries.visible = false;\n        }\n        else {\n            e.dataSeries.visible = true;\n        }\n        e.chart.render();\n    }\n\n    const options = {\n        animationEnabled: true,\n        legend: {\n            verticalAlign: \"center\",\n            horizontalAlign: \"right\",\n            reversed: true,\n            cursor: \"pointer\",\n            fontSize: 16,\n            itemclick: toggleDataSeries\n\n        },\n        toolTip: {\n            shared: true\n        },\n        data: [\n            {\n                type: \"stackedColumn100\",\n                name: \"Top\",\n                showInLegend: true,\n                color: \"#eb2a2a\",\n                dataPoints: [\n                    //{ label: \"United States\", y: 238 },\n                ]\n            },\n            {\n                type: \"stackedColumn100\",\n                name: \"Jungle\",\n                showInLegend: true,\n                color: \"#40f022\",\n                dataPoints: [\n                ]\n            },\n            {\n                type: \"stackedColumn100\",\n                name: \"Mid\",\n                showInLegend: true,\n                color: \"#00b7ff\",\n                dataPoints: [\n                ]\n            }\n        ]\n    }\n\n    for (var i = 0; i < props.gamedata[\"roles\"].length; i++) {\n        options[\"data\"][i][\"dataPoints\"].push({label: props.gamedata[\"roles\"][i][0], y:props.gamedata[\"roles\"][i][1] });\n    }\n\n    return (\n        <div>\n            <CanvasJSChart options={options}\n            />\n            {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n        </div>\n    );\n}\n\nexport default RoleStackedBar;"]},"metadata":{},"sourceType":"module"}